@import url('https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;600;700&display=swap');

/*
*{
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-family: 'Open Sans', sans-serif;
}
body{
  min-height: 100vh;
  background: #1da1f2;
}

.twitter-box {
  display: flex;
  align-items: center;
  justify-content: center;
  padding-top: 10vh;
}

body > h2 {
  padding-top: 20px;
  padding-left: 20px;
  font-size: 30px;
  font-weight: 100;
}

.hashtags {
  position:absolute;
  top:20vh;
  right:20vh;
  border: red;
  /* filter: blur(13px); */

/*}*/

body{
  min-height: 100vh;
  background: hsl(230, 43%, 97%);
}

h2 {
  margin-top: 40px;
  padding-top: 20px;
  padding-left: 100px;
  font-size: 30px;
  font-weight: 900;
}

#logoInsight {
  height: 150px;
  width: 150px;
  /* padding-left: 50px; */
  margin-left: 50px;
}

.twitter-box {
  display: flex;
  /* align-items: center;
  justify-content: center; */
  position: relative;
  padding-left: 10vh;
}

.mainRow {
  display: flex;
}

::selection{
  color: #fff;
  background: #f8f8f8;
}

.previewPost{
  padding-left: 2vh;
  width: 500px;
  object-fit: cover;
  margin-right: 300px;
  height: 700px;
}
.wrapper{
  background: #fff;
  /* max-width: 475px; */
  width: 675px;
  height: 700px;
  border-radius: 15px;
  padding: 25px 25px 15px 25px;
  box-shadow: 0px 10px 15px rgba(0,0,0,0.1);
  /* left: -500px; */
  


}
.input-box{
  padding-top: 10px;
  border-bottom: 1px solid #e6e6e6;
}
.input-box .tweet-area{
  position: relative;
  min-height: 130px;
  max-height: 170px;
  overflow-y: auto;
}
.tweet-area::-webkit-scrollbar{
  width: 0px;
}
.tweet-area .placeholder{
  position: absolute;
  margin-top: -3px;
  font-size: 22px;
  color: #98A5B1;
  pointer-events: none;
}
.tweet-area .input{
  outline: none;
  font-size: 17px;
  min-height: inherit;
  word-wrap: break-word;
  word-break: break-all;
}
.tweet-area .editable{
  position: relative;
  z-index: 5;
}
.tweet-area .readonly{
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
  color: transparent;
  background: transparent;
}
.readonly .highlight{
  background: #fd9bb0;
}
.input-box .privacy{
  color: #1da1f2;
  margin: 15px 0;
  display: inline-flex;
  align-items: center;
  padding: 7px 10px;
  border-radius: 50px;
  cursor: pointer;
  transition: background 0.2s ease;
}
.privacy{
  margin-top: 130px;
}
.privacy:hover, .icons li:hover{
  background: #e7f5fe;
}
.privacy i{
  font-size: 18px;
}
.privacy span{
  font-size: 15px;
  font-weight: 600;
  margin-left: 7px;
}

.image {
  padding-left: 40px;
}

.image img {
    margin-top: 20px auto;
    width:550px;
    height:350px;
    margin-bottom: 25px;
    object-fit: contain;
    /* justify-content: center;
    align-content: center; */

}

.bottom{
  display: flex;
  margin-top: 13px;
  align-items: center;
  justify-content: space-between;
}
.bottom .icons{
  display: inline-flex;
}
.icons li{
  list-style: none;
  color: #1da1f2;
  font-size: 20px;
  margin: 0 2px;
  height: 38px;
  width: 38px;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 50%;
  transition: background 0.2s ease;
}
.bottom .content{
  display: flex;
  align-items: center;
  justify-content: center;
}
.bottom .counter{
  color: #333;
  display: none;
  font-weight: 500;
  margin-right: 15px;
  padding-right: 15px;
  border-right: 1px solid #aab8c2;
}
.bottom button{
  padding: 9px 18px;
  border: none;
  outline: none;
  border-radius: 50px;
  font-size: 16px;
  font-weight: 700;
  background: #1da1f2;
  color: #fff;
  cursor: pointer;
  opacity: 0.5;
  pointer-events: none;
  transition: background 0.2s ease;
}
.bottom button.active{
  opacity: 1;
  pointer-events: auto;
}
.bottom button:hover{
  background: #0d8bd9;
} */


/* recommendations */


.container {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
  grid-gap: 2em;
  /* padding-bottom: 10vh; */
}
.attributes {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(10ch, 1fr));
  grid-gap: 1em;
}
.attributes dt {
  grid-column-start: 1;
}
.attributes dd {
  grid-column-start: span 2;
}
/* Commented explanation below, uncomment to read more easily: */
/* .attributes {
  // how wide do the labels need to be at minimum? (`ch` is useful for letters) $label_min_width: 10ch;
  // how much wider should the `value` be than the label? $value_width_ratio: 2;
  display: grid;
  // auto-repeat as many grid columns as will fit inside the element grid-template-columns: repeat(auto-fit, minmax($label_min_width, 1fr));
  grid-gap: 1em;
  dt {
    // force the dt to always start on a new grid row grid-column-start: 1;
 }
  dd {
    grid-column-start: span $value_width_ratio;
 }
}
*/
/* Styling - just to make pretty. Comment out the below to see a bare bones layout. */
* {

  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-family: 'Open Sans', sans-serif;
}
/* html {
  font-size: 16px;
  font-family: "Roboto Condensed", Helvetica, Arial, sans-serif;
  color: #313233;
} */
.container {
  padding: 10vh 2.5vh;
  margin: auto;
  max-width: 1200px;
}
.person {
  position: relative;
  background-color: white;
  padding: 3rem 1.5rem;
  box-shadow: 0 2px 25px -5px rgba(0, 0, 0, 0.2);
  transition: 0.25s ease-in-out all;
}
.person h3 {
  font-family: "Passion One", Impact, condensed, sans-serif;
  font-size: 2em;
  text-transform: uppercase;
  letter-spacing: 0.05em;
  line-height: 1.1;
  margin: 0 0 1.5rem 0;
  color: hsl(203, 89%, 53%);
}
.person::after {
  content: "";
  position: absolute;
  top: 3rem;
  left: 0em;
  display: block;
  width: 10px;
  height: 2.2em;
  border-radius: 5px;
  background-color: var(--data-color);
  animation: 0.55s ease-in-out skewThis forwards;
}
.person:hover {
  cursor: pointer;
  box-shadow: 0 2px 25px -5px rgba(0, 0, 0, 0.35);
}
.person:hover .attributes {
  opacity: 0.9;
}
.person:hover::after {
  transform: skew(-25deg, 0deg);
  animation: 0.55s ease-in-out skewThis backwards;
}
.attributes {
  margin: 0;
  opacity: 0.75;
  transition: 0.25s ease-in-out all;
}
.attributes dt {
  font-family: "Passion One", Impact, condensed, sans-serif;
  font-size: 1.1em;
  line-height: 1rem;
  letter-spacing: 0.05em;
  text-transform: uppercase;
  color: var(--data-color);
}
.attributes dd {
  margin: 0;

}
.attributes .quote::before, .attributes .quote::after {
  margin: 0 0.2ch;
  opacity: 0.5;
}
.attributes .quote::before {
  content: open-quote;
  margin-left: -1ch;
}
.attributes .quote::after {
  content: close-quote;
}
@keyframes skewThis {
  0% {
    transform: skew(0deg, 0deg);
 }
  100% {
    transform: skew(25deg, 0deg);
 }
}
@keyframes skewBack {
  0% {
    transform: skew(25deg, 0deg);
 }
  100% {
    transform: skew(-25deg, 0deg);
 }
}


/* hashtags */

.hashtags {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
  grid-gap: 2em;
  flex-wrap: wrap;
  height: 300px;
}
.listTags {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(10ch, 1fr));
  grid-gap: 1em;
}
.listTags dt {
  grid-column-start: 1;

}
/* .attributes dd {
  grid-column-start: span 2;
} */
/* Commented explanation below, uncomment to read more easily: */
/* .attributes {
  // how wide do the labels need to be at minimum? (`ch` is useful for letters) $label_min_width: 10ch;
  // how much wider should the `value` be than the label? $value_width_ratio: 2;
  display: grid;
  // auto-repeat as many grid columns as will fit inside the element grid-template-columns: repeat(auto-fit, minmax($label_min_width, 1fr));
  grid-gap: 1em;
  dt {
    // force the dt to always start on a new grid row grid-column-start: 1;
 }
  dd {
    grid-column-start: span $value_width_ratio;
 }
}
*/
/* Styling - just to make pretty. Comment out the below to see a bare bones layout. */

/* html {
  font-size: 16px;
  font-family: "Roboto Condensed", Helvetica, Arial, sans-serif;
  color: #313233;
} */
.hashtags {
  /* padding: 10vh 2.5vh; */
  /*margin: auto;*/
  max-width: 700px;
  padding-left: 10vh;
  /* height: auto; */
}
.mainList {
  position: relative;
  background-color: white;
  padding: 3rem 1.5rem;
  box-shadow: 0 2px 25px -5px rgba(0, 0, 0, 0.2);
  transition: 0.25s ease-in-out all;
}
.mainList h3 {
  font-family: "Passion One", Impact, condensed, sans-serif;
  font-size: 2em;
  text-transform: uppercase;
  letter-spacing: 0.05em;
  line-height: 1.1;
  margin: 0 0 1.5rem 0;
  color: hsl(203, 89%, 53%);
}
.mainList::after {
  content: "";
  position: absolute;
  top: 3rem;
  left: 0em;
  display: block;
  width: 10px;
  height: 2.2em;
  border-radius: 5px;
  background-color: var(--data-color);
  animation: 0.55s ease-in-out skewThis forwards;
}
.mainList:hover {
  cursor: pointer;
  box-shadow: 0 2px 25px -5px rgba(0, 0, 0, 0.35);
}
.mainList:hover .attributes {
  opacity: 0.9;
}
.mainList:hover::after {
  transform: skew(-25deg, 0deg);
  animation: 0.55s ease-in-out skewThis backwards;
}
.listTags {
  margin: 0;
  opacity: 0.75;
  transition: 0.25s ease-in-out all;
}
.listTags dt {
  font-family: "Passion One", Impact, condensed, sans-serif;
  font-size: 1.1em;
  line-height: 1rem;
  letter-spacing: 0.05em;
  text-transform: uppercase;
  font-weight: 10;
  color: var(--data-color);
}
.listTags dd {
  margin: 0;

}
.listTags .quote::before, .listTags .quote::after {
  margin: 0 0.2ch;
  opacity: 0.5;
}
.listTags .quote::before {
  content: open-quote;
  margin-left: -1ch;
}
.listTags .quote::after {
  content: close-quote;
}
@keyframes skewThis {
  0% {
    transform: skew(0deg, 0deg);
 }
  100% {
    transform: skew(25deg, 0deg);
 }
}
@keyframes skewBack {
  0% {
    transform: skew(25deg, 0deg);
 }
  100% {
    transform: skew(-25deg, 0deg);
 }
}

.mainContent {
  padding-top: 1vh;
}

#tweet-entry{
  border: 0;
  outline: none;
  width:100%;
  height: 10em;
  margin: 0;
  padding-left: 10px;
  padding-right: 10px;
  padding-top: 0;
}


#tweet-entry:focus{
  border: 0;
  outline: none;
  width: 100%;
}

button {
  cursor: pointer;
}


/* score */



.score {
  /* display: grid; */
  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
  grid-gap: 2em;
  flex-wrap: wrap;
  padding-left: 10vh;
  width: 500px;

  /* width: 520px;*/
  height: 400px;
  /* padding-bottom: 20vh; */

}
.listScore {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(10ch, 1fr));
  grid-gap: 1em;
}
.listScore dt {
  grid-column-start: 1;

}
/* .attributes dd {
  grid-column-start: span 2;
} */
/* Commented explanation below, uncomment to read more easily: */
/* .attributes {
  // how wide do the labels need to be at minimum? (`ch` is useful for letters) $label_min_width: 10ch;
  // how much wider should the `value` be than the label? $value_width_ratio: 2;
  display: grid;
  // auto-repeat as many grid columns as will fit inside the element grid-template-columns: repeat(auto-fit, minmax($label_min_width, 1fr));
  grid-gap: 1em;
  dt {
    // force the dt to always start on a new grid row grid-column-start: 1;
 }
  dd {
    grid-column-start: span $value_width_ratio;
 }
}
*/
/* Styling - just to make pretty. Comment out the below to see a bare bones layout. */

/* html {
  font-size: 16px;
  font-family: "Roboto Condensed", Helvetica, Arial, sans-serif;
  color: #313233;
} */
.score {
  /* padding: 10vh 2.5vh; */
  /*margin: auto;*/
  /* max-width: 1200px;
  padding-left: 1vh; */

}
.mainScore {
  position: relative;
  background-color: white;
  padding: 3rem 1.5rem;
  box-shadow: 0 2px 25px -5px rgba(0, 0, 0, 0.2);
  transition: 0.25s ease-in-out all;
}
.mainScore h3 {
  font-family: "Passion One", Impact, condensed, sans-serif;
  font-size: 2em;
  text-transform: uppercase;
  letter-spacing: 0.05em;
  line-height: 1.1;
  margin: 0 0 1.5rem 0;
  color: hsl(203, 89%, 53%);
}
.mainScore::after {
  content: "";
  position: absolute;
  top: 3rem;
  left: 0em;
  display: block;
  width: 10px;
  height: 2.2em;
  border-radius: 5px;
  background-color: var(--data-color);
  animation: 0.55s ease-in-out skewThis forwards;
}
.mainScore:hover {
  cursor: pointer;
  box-shadow: 0 2px 25px -5px rgba(0, 0, 0, 0.35);
}
.mainScore:hover .attributes {
  opacity: 0.9;
}
.mainScore:hover::after {
  transform: skew(-25deg, 0deg);
  animation: 0.55s ease-in-out skewThis backwards;
}
.listScore {
  margin: 0;
  opacity: 0.75;
  transition: 0.25s ease-in-out all;
}
.listScore dt {
  font-family: "Passion One", Impact, condensed, sans-serif;
  font-size: 1.1em;
  line-height: 1rem;
  letter-spacing: 0.05em;
  text-transform: uppercase;
  font-weight: 10;
  color: var(--data-color);
}
.listScore dd {
  margin: 0;

}
.listScore .quote::before, .listScore .quote::after {
  margin: 0 0.2ch;
  opacity: 0.5;
}
.listScore .quote::before {
  content: open-quote;
  margin-left: -1ch;
}
.listScore .quote::after {
  content: close-quote;
}
@keyframes skewThis {
  0% {
    transform: skew(0deg, 0deg);
 }
  100% {
    transform: skew(25deg, 0deg);
 }
}
@keyframes skewBack {
  0% {
    transform: skew(25deg, 0deg);
 }
  100% {
    transform: skew(-25deg, 0deg);
 }
}

.finScore{
  justify-content: center;

}

#final-wrapper{
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

#preview-textfield{
  position: relative;
  text-align: center;
  font-size: 30px;
  font-weight: bold;
  bottom: 90px;
}


  /* Absolute Center Spinner */
.loading {
  position: fixed;
  z-index: 999;
  height: 2em;
  width: 2em;
  overflow: show;
  margin: auto;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
}

/* Transparent Overlay */
.loading:before {
  content: '';
  display: block;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
    background: radial-gradient(rgba(20, 20, 20,.8), rgba(0, 0, 0, .8));

  background: -webkit-radial-gradient(rgba(20, 20, 20,.8), rgba(0, 0, 0,.8));
}

/* :not(:required) hides these rules from IE9 and below */
.loading:not(:required) {
  /* hide "loading..." text */
  font: 0/0 a;
  color: transparent;
  text-shadow: none;
  background-color: transparent;
  border: 0;
}

.loading:not(:required):after {
  content: '';
  display: block;
  font-size: 10px;
  width: 1em;
  height: 1em;
  margin-top: -0.5em;
  -webkit-animation: spinner 150ms infinite linear;
  -moz-animation: spinner 150ms infinite linear;
  -ms-animation: spinner 150ms infinite linear;
  -o-animation: spinner 150ms infinite linear;
  animation: spinner 150ms infinite linear;
  border-radius: 0.5em;
  -webkit-box-shadow: rgba(255,255,255, 0.75) 1.5em 0 0 0, rgba(255,255,255, 0.75) 1.1em 1.1em 0 0, rgba(255,255,255, 0.75) 0 1.5em 0 0, rgba(255,255,255, 0.75) -1.1em 1.1em 0 0, rgba(255,255,255, 0.75) -1.5em 0 0 0, rgba(255,255,255, 0.75) -1.1em -1.1em 0 0, rgba(255,255,255, 0.75) 0 -1.5em 0 0, rgba(255,255,255, 0.75) 1.1em -1.1em 0 0;
box-shadow: rgba(255,255,255, 0.75) 1.5em 0 0 0, rgba(255,255,255, 0.75) 1.1em 1.1em 0 0, rgba(255,255,255, 0.75) 0 1.5em 0 0, rgba(255,255,255, 0.75) -1.1em 1.1em 0 0, rgba(255,255,255, 0.75) -1.5em 0 0 0, rgba(255,255,255, 0.75) -1.1em -1.1em 0 0, rgba(255,255,255, 0.75) 0 -1.5em 0 0, rgba(255,255,255, 0.75) 1.1em -1.1em 0 0;
}

/* Animation */

@-webkit-keyframes spinner {
  0% {
    -webkit-transform: rotate(0deg);
    -moz-transform: rotate(0deg);
    -ms-transform: rotate(0deg);
    -o-transform: rotate(0deg);
    transform: rotate(0deg);
  }
  100% {
    -webkit-transform: rotate(360deg);
    -moz-transform: rotate(360deg);
    -ms-transform: rotate(360deg);
    -o-transform: rotate(360deg);
    transform: rotate(360deg);
  }
}
@-moz-keyframes spinner {
  0% {
    -webkit-transform: rotate(0deg);
    -moz-transform: rotate(0deg);
    -ms-transform: rotate(0deg);
    -o-transform: rotate(0deg);
    transform: rotate(0deg);
  }
  100% {
    -webkit-transform: rotate(360deg);
    -moz-transform: rotate(360deg);
    -ms-transform: rotate(360deg);
    -o-transform: rotate(360deg);
    transform: rotate(360deg);
  }
}
@-o-keyframes spinner {
  0% {
    -webkit-transform: rotate(0deg);
    -moz-transform: rotate(0deg);
    -ms-transform: rotate(0deg);
    -o-transform: rotate(0deg);
    transform: rotate(0deg);
  }
  100% {
    -webkit-transform: rotate(360deg);
    -moz-transform: rotate(360deg);
    -ms-transform: rotate(360deg);
    -o-transform: rotate(360deg);
    transform: rotate(360deg);
  }
}
@keyframes spinner {
  0% {
    -webkit-transform: rotate(0deg);
    -moz-transform: rotate(0deg);
    -ms-transform: rotate(0deg);
    -o-transform: rotate(0deg);
    transform: rotate(0deg);
  }
  100% {
    -webkit-transform: rotate(360deg);
    -moz-transform: rotate(360deg);
    -ms-transform: rotate(360deg);
    -o-transform: rotate(360deg);
    transform: rotate(360deg);
  }
}

.rightDiv {
  display: flex;
  flex-direction: column;
}